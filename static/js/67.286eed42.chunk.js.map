{"version":3,"file":"static/js/67.286eed42.chunk.js","mappings":"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","sources":["components/TweetsCard/TweetCard.styled.js","components/TweetsCard/TweetsCard.jsx","components/TweetsList/TweetsList.styled.js","components/TweetsList/TweetsList.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Api/apiService.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Tweets.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport '@fontsource/montserrat';\r\nimport background from '../../img/bgtweets.png'\r\n\r\nexport const Container = styled.div`\r\n  width: 380px;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n`;\r\n\r\nexport const ContainerImg = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  height: 214px;\r\n`;\r\n\r\nexport const ContainerCard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ImageLogo = styled.img`\r\n  width: 76px;\r\n  height: 22px;\r\n\r\n  position: absolute;\r\n  margin-top: 20px;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ImageBackground = styled.div`\r\n  width: 308px;\r\n  height: 168px;\r\n\r\n  position: relative;\r\n  margin: 0 auto;\r\n  margin-top: 28px;\r\n\r\n  background-image: url(${background});\r\n  background-size: cover;\r\n`;\r\n\r\nexport const ImageAvatar = styled.img`\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  position: absolute;\r\n\r\n  margin-left: 150px;\r\n  margin-top: 178px;\r\n`;\r\n\r\nexport const ImageBorder = styled.img`\r\n  margin-top: 15px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  margin-top: 62px;\r\n  display: flex;\r\n  padding: 0;\r\n  flex-direction: column;\r\n  list-style: none;\r\n  gap: 16px;\r\n\r\n  margin-bottom: 26px;\r\n\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n\r\n  color: #ebd8ff;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  text-align: center;\r\n\r\n  font-family: 'Montserrat';\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n\r\n  color: #ebd8ff;\r\n`;\r\n\r\nconst setButtonColor = props => {\r\n  if (props.state) {\r\n    return '#5CD3A8';\r\n  }\r\n  return '#EBD8FF';\r\n};\r\n\r\nconst setHoverColor = props => {\r\n  if (props.state) {\r\n    return '#96E2C7';\r\n  }\r\n  return '#F2E5FF';\r\n};\r\n\r\nexport const Button = styled.button`\r\n  width: 196px;\r\n  height: 50px;\r\n\r\n  margin-bottom: 26px;\r\n\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10.3108px;\r\n\r\n  font-family: Montserrat;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n\r\n  color: #373737;\r\n\r\n  background: ${setButtonColor};\r\n\r\n  &:hover {\r\n    background: ${setHoverColor};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  ContainerImg,\r\n  ContainerCard,\r\n  ImageLogo,\r\n  ImageAvatar,\r\n  ImageBackground,\r\n  List,\r\n  ListItem,\r\n  ImageBorder,\r\n  Button,\r\n} from './TweetCard.styled';\r\nimport logo from '../../img/logo.png';\r\nimport avatar from '../../img/avatar.png';\r\nimport border from '../../img/border.png';\r\n\r\nfunction TweetsCard({ followercard }) {\r\n  const [buttonState, setButtonState] = useState(false);\r\n  const [value, setValue] = useState(followercard.followers);\r\n\r\n  // const [cardState, setCardState] = useState([]);\r\n  // useEffect(() => {\r\n    \r\n  //     localStorage.setItem('cardstate', JSON.stringify({value, buttonState}));\r\n    \r\n  // }, [value, buttonState])\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <ContainerImg>\r\n        <ImageLogo src={logo} alt=\"logo\" />\r\n        <ImageBackground/>\r\n        <ImageAvatar src={avatar} alt=\"avatar\" />\r\n        <ImageBorder src={border} alt=\"border\" />\r\n      </ContainerImg>\r\n      <ContainerCard>\r\n        <List>\r\n          <ListItem>{followercard.user}</ListItem>\r\n          <ListItem>{followercard.tweets} TWEETS</ListItem>\r\n          <ListItem>{value} FOLLOWERS</ListItem>\r\n        </List>\r\n        <Button\r\n          type=\"button\"\r\n          name=\"follow\"\r\n          state={buttonState}\r\n          onClick={() => {\r\n            setButtonState(prevState => !prevState);\r\n            !buttonState\r\n              ? setValue(Number(value) + 1)\r\n              : setValue(Number(value) - 1);\r\n          }}\r\n        >\r\n          {!buttonState ? 'FOLLOW' : 'FOLLOWING'}\r\n        </Button>\r\n      </ContainerCard>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TweetsCard;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 26px;\r\n\r\n  margin-top: 30px;\r\n  padding: 0;\r\n\r\n  list-style: none;\r\n`;\r\n","import React from \"react\";\r\nimport TweetsCard from \"../TweetsCard/TweetsCard\";\r\nimport { Container } from \"./TweetsList.styled\";\r\n\r\nexport const TweetList = ({ cards }) => {\r\n  return (\r\n    <Container>\r\n      {cards.map((card) => (\r\n        <li key={card.id}>\r\n          <TweetsCard followercard={card} />\r\n        </li>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonLoadMore = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 4px;\r\n  background: #4B2A99;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: block;\r\n  margin: 10px auto;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  min-width: 100px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n  &:hover {\r\n    background: #6E54AD;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 26px;\r\n\r\n  padding: 0;\r\n\r\n  list-style: none;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { ButtonLoadMore } from \"./Button.styled\";\r\n\r\nexport const Button = ({ onClick }) => {\r\n  return (\r\n    <ButtonLoadMore onClick={onClick}>\r\n      Load more\r\n    </ButtonLoadMore>\r\n  );\r\n};\r\n\r\nexport default Button;","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://6489a4595fa58521caaffc40.mockapi.io\";\r\n\r\nexport async function apiService(_, page) {\r\n  \r\n  const cards = await axios.get(\r\n    `${axios.defaults.baseURL}/tweets-followers?limit=3&page=${page}`\r\n  );\r\n\r\n  return cards.data;\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoaderSpinner = styled.div`\r\n  display: grid;\r\n  place-content: center;\r\n`;\r\n","import React from 'react';\r\nimport {TailSpin} from 'react-loader-spinner';\r\nimport {LoaderSpinner} from \"./Loader.styled\"\r\n\r\nconst Loader = () => {\r\n\r\n    return (\r\n        <LoaderSpinner>\r\n            <TailSpin color=\"#4B2A99\" radius=\"9\" height={50} width={50} />\r\n        </LoaderSpinner>\r\n    );\r\n};\r\n\r\nexport default Loader;","import { useState, useEffect } from 'react';\r\nimport { TweetList } from '../components/TweetsList/TweetsList';\r\nimport { Button } from '../components/Button/Button';\r\nimport { apiService } from '../components/Api/apiService';\r\nimport Loader from '../components/Loader/Loader';\r\n\r\nfunction Tweets() {\r\n  const [items, setItems] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  localStorage.setItem('items', JSON.stringify(items));\r\n\r\n  useEffect(() => {\r\n\r\n    setIsLoading(true);\r\n\r\n    apiService(items, page)\r\n      .then(cards => {\r\n        setItems(() => [...items, ...cards]);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      })\r\n      .finally(() => setIsLoading(false));\r\n  }, [page]);\r\n\r\n  // useEffect(() => {\r\n  //   setIsLoading(true);\r\n\r\n  //   apiService(items, page)\r\n  //   .then (cards => {\r\n  //     setItems((prevState)=>[...prevState, ...cards])\r\n  //   })\r\n  //   .catch(error=>console.error(error))\r\n  //   .finally(() => setIsLoading(false));\r\n  // },[page]);\r\n\r\n  const loadMore = () => {\r\n    setPage(prevState => prevState + 1);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 0 }}>\r\n      <TweetList cards={items} />\r\n      {isLoading && <Loader />}\r\n      {items.length < 11 && <Button onClick={loadMore} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tweets;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","ContainerImg","_templateObject2","ContainerCard","_templateObject3","ImageLogo","img","_templateObject4","ImageBackground","_templateObject5","background","ImageAvatar","_templateObject6","ImageBorder","_templateObject7","List","ul","_templateObject8","ListItem","li","_templateObject9","Button","button","_templateObject10","props","state","_ref","followercard","_useState","useState","_useState2","_slicedToArray","buttonState","setButtonState","_useState3","followers","_useState4","value","setValue","_jsxs","children","_jsx","src","alt","avatar","user","tweets","type","name","onClick","prevState","Number","TweetList","cards","map","card","TweetsCard","id","ButtonLoadMore","_apiService","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","page","wrap","_context","prev","next","axios","get","concat","defaults","baseURL","sent","abrupt","data","stop","apply","arguments","LoaderSpinner","TailSpin","color","radius","height","width","items","setItems","setPage","_useState5","_useState6","isLoading","setIsLoading","localStorage","setItem","JSON","stringify","useEffect","_x","_x2","apiService","then","_toConsumableArray","catch","error","console","finally","style","padding","Loader","length"],"sourceRoot":""}